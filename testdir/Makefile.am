INCLUDES = -I$(top_srcdir)/libsrc \
	-I$(top_srcdir)/libsrc2 \
	-I$(top_srcdir)/volume_io/Include \
	-I$(top_builddir)/volume_io/Include

AM_CFLAGS = -DAPPARENTORDER

script_tests = \
	run_test_arg_parse.sh \
	run_tests.sh

all-local:
	cd $(srcdir) && chmod +x $(script_tests)

LDADD = ../libvolume_io2.la ../libminc2.la

TESTS = run_test_arg_parse.sh \
	run_tests.sh \
	mincapi \
	minc2-create-test-images\
	minc2-create-test-images-2 \
	minc2-datatype-test \
	minc2-dimension-test \
	minc2-full-test \
	minc2-grpattr-test \
	minc2-hyper-test \
	minc2-hyper-test-2 \
	minc2-label-test \
	minc2-record-test \
	minc2-slice-test \
	minc2-valid-test \
	minc2-volprops-test \
	minc2-multires-test \
	minc2-convert-test \
	minc2-vector_dimension-test 

check_PROGRAMS = minc test_mconv minc_types icv icv_range \
	icv_dim test_speed icv_dim1 icv_fillvalue \
	test_xfm create_grid_xfm mincapi test_speed test_arg_parse \
	minc2-create-test-images \
	minc2-create-test-images-2 \
	minc2-datatype-test \
	minc2-dimension-test \
	minc2-full-test \
	minc2-grpattr-test \
	minc2-hyper-test \
	minc2-hyper-test-2 \
	minc2-label-test \
	minc2-record-test \
	minc2-slice-test \
	minc2-valid-test \
	minc2-volprops-test \
	minc2-multires-test \
	minc2-convert-test \
	minc2-vector_dimension-test 


# The test script "run_tests.sh" uses a series of "expected output"
# files, comparing each with the output generated by the file under
# test.  We need to distribute these files (so they are in
# EXTRA_DIST).
#
expect_files = icv.out icv_dim.out icv_dim1.out icv_fillvalue.out	\
	icv_range.out minc_types.out
	
EXTRA_DIST = $(script_tests) $(expect_files) t1.xfm icv.mnc

CLEANFILES = test.mnc _* *.mnc

# Unfortunately, GNU make has implicit rules for files with the suffix
# ".out".  The following lines disable implicit rules.  In future, we
# should probably use a different naming scheme for these files ...
# 
icv.out: ;
icv_dim.out: ;
icv_dim1.out: ;
icv_fillvalue.out: ;
icv_range.out: ;
minc_types.out: ;


